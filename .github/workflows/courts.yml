name: Padel‑court occupancy

on:
  schedule:
    # Summer (Irish time = UTC+1)
    - cron: '50 19 * * 6,0'   # 20:50 Sat/Sun Irish Summer Time
    - cron: '50 20 * * 1-5'   # 21:50 Mon–Fri Irish Summer Time
    # Winter (Irish time = UTC)
    - cron: '50 20 * * 6,0'   # 20:50 Sat/Sun Irish Standard Time
    - cron: '50 21 * * 1-5'   # 21:50 Mon–Fri Irish Standard Time
  workflow_dispatch:          # adds a “Run workflow” button

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - run: npm install playwright
      - run: npx playwright install --with-deps
      - name: Run scraper
        id: scrape
        run: node check.js | tee result.txt

      # ──────────────────────────────────────────
      # 1)  PARSE the numbers once so every later
      #     step can reuse them
      # ──────────────────────────────────────────
      - name: Parse counts for later use
        id: nums
        run: |
          PADLK_FREE=$(grep -oP 'Padel LK: \K[0-9]+' result.txt)
          PADLK_TOTAL=$(grep -oP 'Padel LK: [0-9]+ free / \K[0-9]+' result.txt)
          PROJ_FREE=$(grep -oP 'Project Padel: \K[0-9]+' result.txt)
          PROJ_TOTAL=$(grep -oP 'Project Padel: [0-9]+ free / \K[0-9]+' result.txt)

          echo "padlk_free=$PADLK_FREE"          >> $GITHUB_OUTPUT
          echo "padlk_busy=$((PADLK_TOTAL-PADLK_FREE))" >> $GITHUB_OUTPUT
          echo "proj_free=$PROJ_FREE"            >> $GITHUB_OUTPUT
          echo "proj_busy=$((PROJ_TOTAL-PROJ_FREE))"   >> $GITHUB_OUTPUT

      # ──────────────────────────────────────────
      # 2)  IMMEDIATE NOTIFICATION (e‑mail)
      #     ─ uses four SMTP_* secrets you already
      #       created earlier
      # ──────────────────────────────────────────
      - name: Install msmtp
        run: sudo apt-get update -y && sudo apt-get install -y msmtp mailutils

      - name: Send nightly e‑mail
        env:
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          TO_EMAIL:  ${{ secrets.TO_EMAIL }}
        run: |
          cat > ~/.msmtprc <<EOF
          defaults
          auth           on
          tls            on
          tls_trust_file /etc/ssl/certs/ca-certificates.crt
          logfile        ~/.msmtp.log

          account default
          host $SMTP_HOST
          port 587
          from $SMTP_USER
          user $SMTP_USER
          password $SMTP_PASS
          EOF
          chmod 600 ~/.msmtprc

          SUBJECT="Padel occupancy $(date +%F)"
          body=$(cat result.txt)
          echo "$body" | mail -s "$SUBJECT" "$TO_EMAIL"

      # ──────────────────────────────────────────
      # 3)  LONG‑TERM CSV ARCHIVE
      #     ─ appends one line per run to
      #       data/occupancy.csv and commits it
      # ──────────────────────────────────────────
      - name: Append to CSV log
        run: |
          mkdir -p data
          FILE=data/occupancy.csv
          if [ ! -f "$FILE" ]; then
            echo "date,padellk_free,padellk_busy,projectpadel_free,projectpadel_busy" > "$FILE"
          fi
          printf "%s,%s,%s,%s,%s\n" "$(date +%F)" \
            "${{ steps.nums.outputs.padlk_free }}" \
            "${{ steps.nums.outputs.padlk_busy }}" \
            "${{ steps.nums.outputs.proj_free }}" \
            "${{ steps.nums.outputs.proj_busy }}" >> "$FILE"

      - name: Commit updated CSV
        run: |
          git config --global user.name  "court‑bot"
          git config --global user.email "actions@github.com"
          git add data/occupancy.csv
          git commit -m "Log for $(date +%F)" || echo "Nothing new to commit"
          git push
